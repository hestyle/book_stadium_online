<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="cn.edu.hestyle.bookstadium.mapper.ChatMapper">
    <!--添加chat-->
    <!--void add(Chat chat);-->
    <insert id="add" parameterType="cn.edu.hestyle.bookstadium.entity.Chat" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `t_chat`(`chat_type`, `from_account_id`, `to_account_id`, `from_unread_count`, `to_unread_count`, `last_chat_message_id`, `created_time`, `modified_time`, `is_delete`)
        VALUES (#{chatType}, #{fromAccountId}, #{toAccountId}, #{fromUnreadCount}, #{toUnreadCount}, #{lastChatMessageId}, #{createdTime}, #{modifiedTime}, #{isDelete})
    </insert>
    <!--更新chat(只能更新fromUnreadCount、toUnreadCount、lastChatMessageId、modifiedTime、isDelete字段)-->
    <!--void update(Chat chat);-->
    <update id="update" parameterType="cn.edu.hestyle.bookstadium.entity.Chat">
        UPDATE `t_chat` SET
            `from_unread_count` = #{fromUnreadCount},
            `to_unread_count` = #{toUnreadCount},
            `last_chat_message_id` = #{lastChatMessageId},
            `modified_time` = #{modifiedTime},
            `is_delete` = #{isDelete}
        WHERE
            `id` = #{id}
    </update>
    <!--通过id查找Chat-->
    <!--Chat findById(Integer chatId);-->
    <select id="findById" resultType="cn.edu.hestyle.bookstadium.entity.Chat">
        SELECT
            `id` as `id`,
            `chat_type` as `chatType`,
            `from_account_id` as `fromAccountId`,
            `to_account_id` as  `toAccountId`,
            `from_unread_count` as `fromUnreadCount`,
            `to_unread_count` as `toUnreadCount`,
            `last_chat_message_id` as `lastChatMessageId`,
            `created_time` as `createdTime`,
            `modified_time` as `modifiedTime`,
            `is_delete` as `isDelete`
        FROM
            `t_chat`
        WHERE
            `id` = #{chatId} AND `is_delete` = 0
    </select>
    <!--查找两个user的chat（chatType = Chat.CHAT_TYPE_USER_TO_USER）-->
    <!--Chat findUserWithUserChat(Integer userIdOne, Integer userIdTwo);-->
    <select id="findUserWithUserChat" resultType="cn.edu.hestyle.bookstadium.entity.Chat">
        SELECT
            `id` as `id`,
            `chat_type` as `chatType`,
            `from_account_id` as `fromAccountId`,
            `to_account_id` as  `toAccountId`,
            `from_unread_count` as `fromUnreadCount`,
            `to_unread_count` as `toUnreadCount`,
            `last_chat_message_id` as `lastChatMessageId`,
            `created_time` as `createdTime`,
            `modified_time` as `modifiedTime`,
            `is_delete` as `isDelete`
        FROM
            `t_chat`
        WHERE
            `chat_type` = 0 AND `is_delete` = 0
                AND ((`from_account_id` = #{userIdOne} AND `to_account_id` = #{userIdTwo}) OR (`from_account_id` = #{userIdTwo} AND `to_account_id` = #{userIdOne}))
    </select>
    <!--查找user与stadiumManager的chat（chatType = Chat.CHAT_TYPE_USER_TO_MANAGER or Chat.CHAT_TYPE_MANAGER_TO_USER）-->
    <!--Chat findUserWithStadiumManagerChat(Integer userId, Integer stadiumManagerId);-->
    <select id="findUserWithStadiumManagerChat" resultType="cn.edu.hestyle.bookstadium.entity.Chat">
        SELECT
            `id` as `id`,
            `chat_type` as `chatType`,
            `from_account_id` as `fromAccountId`,
            `to_account_id` as  `toAccountId`,
            `from_unread_count` as `fromUnreadCount`,
            `to_unread_count` as `toUnreadCount`,
            `last_chat_message_id` as `lastChatMessageId`,
            `created_time` as `createdTime`,
            `modified_time` as `modifiedTime`,
            `is_delete` as `isDelete`
        FROM
            `t_chat`
        WHERE
            `is_delete` = 0
                AND ((`chat_type` = 1 AND `from_account_id` = #{userId} AND `to_account_id` = #{stadiumManagerId})
                         OR (`chat_type` = 2 AND `from_account_id` = #{stadiumManagerId} AND `to_account_id` = #{userId}))
    </select>
    <!--user分页查找Chat-->
    <!--List<Chat> userFindByPage(Integer userId, Integer beginIndex, Integer pageSize);-->
    <select id="userFindByPage" resultType="cn.edu.hestyle.bookstadium.entity.Chat">
        SELECT
            `id` as `id`,
            `chat_type` as `chatType`,
            `from_account_id` as `fromAccountId`,
            `to_account_id` as  `toAccountId`,
            `from_unread_count` as `fromUnreadCount`,
            `to_unread_count` as `toUnreadCount`,
            `last_chat_message_id` as `lastChatMessageId`,
            `created_time` as `createdTime`,
            `modified_time` as `modifiedTime`,
            `is_delete` as `isDelete`
        FROM
            `t_chat`
        WHERE
            (`chat_type` = 0 AND `from_account_id` = #{userId})
                OR (`chat_type` = 0 AND `to_account_id` = #{userId} AND (`last_chat_message_id` IS NOT NULL))
                OR (`chat_type` = 1 AND `from_account_id` = #{userId})
                OR (`chat_type` = 2 AND `to_account_id` = #{userId} AND (`last_chat_message_id` IS NOT NULL))
        ORDER BY
            `modified_time` DESC
        LIMIT
            #{beginIndex}, #{pageSize}
    </select>
</mapper>